services:
  postgres:
    image: postgres:15
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: bsd_transaction
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 1s
      timeout: 5s
      retries: 10
    networks:
      - app-network

  api:
    build:
      context: .
      dockerfile: docker/api.Dockerfile
    ports:
      - "3000:3000"
    environment:
      DATABASE_URL: "postgresql://postgres:postgres@postgres:5432/bsd_transaction"
      NODE_ENV: development
    depends_on:
      - postgres
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:3000/health" ]
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - app-network

  test:
    build:
      context: .
      dockerfile: docker/test.Dockerfile
    environment:
      DATABASE_URL: "postgresql://postgres:postgres@postgres:5432/bsd_transaction"
      API_URL: "http://api:3000"
    depends_on:
      - postgres
      - api
    entrypoint: ["/bin/sh", "-c", "npx prisma migrate deploy && npm run test"]
    networks:
      - app-network

volumes:
  postgres_data:

networks:
  app-network:
    driver: bridge
